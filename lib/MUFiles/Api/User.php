<?php
/**
 * MUFiles.
 *
 * @copyright Michael Ueberschaer (MU)
 * @license 
 * @package MUFiles
 * @author Michael Ueberschaer <kontakt@webdesign-in-bremen.com>.
 * @link http://webdesign-in-bremen.com
 * @link http://zikula.org
 * @version Generated by ModuleStudio 0.6.2 (http://modulestudio.de).
 */

/**
 * This is the User api helper class.
 */
class MUFiles_Api_User extends MUFiles_Api_Base_User
{
    public function hookedObject(array $args)
    {
        $module = $args['hookedModue'];
        return $module;
        $objectid = $args['objectId'];
        $areaid = $args['areaId'];
        $url = $args['url'];
        $hookdata = $args['hookdata'];
              
        $mucollections = $this->request->request->filter('mufilescollection');
        //return LogUtil::registerStatus($mucollections);
      
        $mufiles = $this->request->request->filter('mufiles-file', '');
     
        if ($mucollections != '') {
            if (is_array($mucollections)) {
                foreach ($mucollections as $mucollection) {
                    $hookedObject = new MUFiles_Entity_Hookobject();
                    $hookedObject->setHookedModule($module);
                    $hookedObject->setUrl($url);
                    if ($hookdata) {
                        $hookedObject->setUrlObject($hookdata);
                    }
                    $collection = $this->entityManager
                        ->getRepository('MUFiles_Entity_Collection')
                        ->findOneBy(array('id' => $mucollection));
                    $hookedObject->setCollectionhook($collection);
                    $this->entityManager->persist($hookedObject);
                    $this->entityManager->flush();
                }
            } else {
                $hookedObject = new MUFiles_Entity_Hookobject();
                $hookedObject->setHookedModule($module);
                $hookedObject->setUrl($url);
                if ($hookdata) {
                    $hookedObject->setUrlObject($hookdata);
                }
                $collection = $this->entityManager
                ->getRepository('MUFiles_Entity_Collection')
                ->findOneBy(array('id' => $mucollections));
                $hookedObject->setCollectionhook($collection);
                $this->entityManager->persist($hookedObject);
                $this->entityManager->flush();
            }
        }
        
    }
}
