<?php
/**
 * MUFiles.
 *
 * @copyright Michael Ueberschaer (MU)
 * @license 
 * @package MUFiles
 * @author Michael Ueberschaer <kontakt@webdesign-in-bremen.com>.
 * @link http://webdesign-in-bremen.com
 * @link http://zikula.org
 * @version Generated by ModuleStudio 0.6.0 (http://modulestudio.de) at Tue Aug 06 08:44:09 CEST 2013.
 */

/**
 * Utility implementation class for controller helper methods.
 */
class MUFiles_Util_Controller extends MUFiles_Util_Base_Controller
{
    /**
     * Retrieve the base path for given object type and upload field combination.
     *
     * @param string $objectType Name of treated entity type.
     * @param string $fieldName  Name of upload field.
     *
     * @return mixed Output.
     * @throws Exception if invalid object type is given.
     */
    public function getFileBaseFolder($objectType, $fieldName, $ignoreCreate = false)
    {
        if (!in_array($objectType, $this->getObjectTypes())) {
            throw new Exception('Error! Invalid object type received.');
        }

        $basePath = FileUtil::getDataDirectory() . '/MUFiles/';

        switch ($objectType) {
            case 'file':
                $basePath .= 'files/uploadfile/';
                break;
        }

        $result = DataUtil::formatForOS($basePath);
        if (substr($result, -1, 1) != '/') {
            // reappend the removed slash
            $result .= '/';
        }

        return $result;
    }
    
    public function getCollections()
    {
        $objectType = $this->request->query->filter('ot', 'collection', FILTER_SANITIZE_STRING);
        $id = $this->request->query->filter('id', 0, FILTER_SANITIZE_NUMBER_INT);
        
        $modelHelper= new MUFiles_Util_Model($this->serviceManager);
        $collectionRepository = $modelHelper->getCollectionsRepository();
        $filesRepository = $modelHelper->getFilesRepository();
        if ($objectType == 'collection') {
            
        } else {
            $thisfile = $filesRepository->selectById($id);
        }
        
        $uid = UserUtil::getVar('uid');
        if ($objectType == 'collection') {
        
        } else {
            $collections = $collectionRepository->selectWhere();
            foreach ($collections as $collection) {
                if ($thisfile['aliascollection'] == $collection['id']) {
                    $selected = 'selected="selected"';
                } else {
                    $selected = '';
                }
                $collectionsout .= '<option ' . $selected . ' value="' . $collection['id'] . '"> ' . $collection['name'] . ' </option>';
            }
        }
        
        return $collectionsout;
    }
}
