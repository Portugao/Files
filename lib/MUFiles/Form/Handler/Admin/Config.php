<?php
/**
 * MUFiles.
 *
 * @copyright Michael Ueberschaer (MU)
 * @license 
 * @package MUFiles
 * @author Michael Ueberschaer <kontakt@webdesign-in-bremen.com>.
 * @link http://webdesign-in-bremen.com
 * @link http://zikula.org
 * @version Generated by ModuleStudio 0.6.0 (http://modulestudio.de) at Tue Aug 06 08:44:09 CEST 2013.
 */

/**
 * Configuration handler implementation class.
 */
class MUFiles_Form_Handler_Admin_Config extends MUFiles_Form_Handler_Admin_Base_Config
{
    /**
     * Initialize form handler.
     *
     * This method takes care of all necessary initialisation of our data and form states.
     *
     * @param Zikula_Form_View $view The form view instance.
     *
     * @return boolean False in case of initialization errors, otherwise true.
     */
    public function initialize(Zikula_Form_View $view)
    {
        // permission check
        if (!SecurityUtil::checkPermission($this->name . '::', '::', ACCESS_ADMIN)) {
            return $view->registerError(LogUtil::registerPermissionError());
        }

        // prepare list of user groups for moderation group selectors
        $userGroups = ModUtil::apiFunc('Groups', 'user', 'getall');
        $userGroupItems = array();
        foreach ($userGroups as $userGroup) {
            $userGroupItems[] = array('value' => $userGroup['gid'], 'text' => $userGroup['name']);
        }

        // retrieve module vars
        $modVars = $this->getVars();

        $modVars['moderationGroupForCollectionsItems'] = $userGroupItems;
        $modVars['moderationGroupForFilesItems'] = $userGroupItems;

        // assign all module vars
        $this->view->assign('config', $modVars);

        // custom initialisation aspects
        $this->initializeAdditions();

        // everything okay, no initialization errors occured
        return true;
    }
    
    /**
     * Method stub for own additions in subclasses.
     */
    protected function initializeAdditions()
    {
        $maxSize = ModUtil::getVar($this->name, 'maxSize');
        $this->view->assign('maxSize', $maxSize);
        
        return true;
    }
}
